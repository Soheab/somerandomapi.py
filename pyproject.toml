[project]
name = "somerandomapi.py"
description = "A maintained wrapper for the somerandomapi API."
authors = [{ name = "Soheab_" }]
requires-python = ">=3.11"
keywords = [
    "https://some-random-api.com",
    "https://api.some-random-api.com",
    "some-random-api",
    "api",
    "somerandomapi",
    "random",
    "images",
    "fun",
    "discord",
    "discord.py",
    "generation",
    "rankcard",
    "canvas",
    "welcome",
    "free",
    "open-source",
    "asyncio",
    "aiohttp",
    "async",
    "wrapper",
]
license = { file = "LICENSE" }
dependencies = ["aiohttp>=3.10.0,<4.0.0"]
dynamic = ["version", "readme"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Natural Language :: English",
    "Typing :: Typed",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
docs = [
    "Sphinx>=8.2,<9",
    "furo>=2024.8,<2025",
    "sphinx-autodoc-typehints>=3.2,<4",
    "enum-tools[sphinx]>=0.13,<0.14",
]


[tool.setuptools]
packages = [
    "somerandomapi",
    "somerandomapi.clients",
    "somerandomapi.internals",
    "somerandomapi.models",
    "somerandomapi.models.welcome",
    "somerandomapi.types",
]

[project.urls]
homepage = "https://github.com/Soheab/somerandomapi.py"
documentation = "https://somerandomapipy.readthedocs.io/"
repository = "https://github.com/Soheab/somerandomapi.py"


[tool.setuptools.dynamic]
version = { attr = "somerandomapi.__version__" }
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.pyright]
include = [
    "somerandomapi",
    "somerandomapi/types",
    "somerandomapi/clients",
    "somerandomapi/models",
    "somerandomapi/internals",
]
exclude = ["**/__pycache__", "_build", "build", "dist", "docs"]
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnusedImport = "error"
pythonVersion = "3.11"
typeCheckingMode = "basic"
reportDuplicateImport = "warning"
reportDeprecated = "warning"

[tool.coverage.run]
omit = ["somerandomapi/types/*", "*/_types.py"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "@overload"]

[tool.black]
line-length = 125

# https://beta.ruff.rs/docs/settings/
[tool.ruff]
fix = true # default: false
line-length = 125 # default: 88
include = [
    "somerandomapi",
    "somerandomapi/types",
    "somerandomapi/clients",
    "somerandomapi/models",
    "somerandomapi/internals",
]
exclude = ["**/__pycache__", "_build", "build", "dist", "docs"]
target-version = "py39" # default: "py38"

[tool.ruff.lint]
ignore = [
    # https://docs.astral.sh/ruff/rules/undefined-local-with-import-star-usage/
    "F405",
    "F403",
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true   # default: false
ignore-fully-untyped = true # default: false
suppress-dummy-args = true  # default: false

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true # default: false

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true # default: false

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.isort]
case-sensitive = true # default: false
combine-as-imports = true # default: false 
force-sort-within-sections = true # default: false
force-to-top = ["future", "typing"] # default: []
force-wrap-aliases = true # default: false
required-imports = ["from __future__ import annotations"] # default: []
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
] # default

[tool.ruff.lint.pydocstyle]
convention = "numpy"                    # default: none
ignore-decorators = ["typing.overload"] # default: []

[tool.ruff.lint.pylint]
max-args = 20 # default: 5 # lets not limit ourselves :)

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true # default: false


[tool.doc8]
ignore = ["D002", "D004"]
